/*!
* Copyright 2014 linkFLy - http://www.cnblogs.com/silin6/
* Released under the MIT license
* http://opensource.org/licenses/mit-license.php
* Date: 2014-8-24 20:17:18
*/
(function (i, g) { var h = Array.prototype.push, r = Array.prototype.splice, m = Array.prototype.slice, n = Object.prototype.toString, e = Array.prototype.forEach, d = {}, p = function (s) { return s == null ? n(s) : d[n.call(s)] || "object" }, a = function (s) { return p(s) === "function" }, f = function (u) { if (u == null) { return false } var t = u.length, s = p(u); if (u == u.window) { return true } if (u.nodeType === 1 && t) { return true } return s === "array" || s !== "function" && s !== "string" && (t === 0 || typeof t === "number" && t > 0 && (t - 1) in u) }, j = new DOMParser(), c = new XPathEvaluator(), o = function (t) { var s = t && t.nodeType; return s && s === 1 || s === 9 }, k = function (x, u) { var s = [], t = p(x) === "string", v; if (!t) { return s } if (f(u)) { e.call(u, function (y) { s = s.concat(k(x, y)) }); return s } if (!o(u)) { return s } try { result = c.evaluate(x, u, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null); while (v = result.iterateNext()) { s.push(v) } } catch (w) { } return s }, q = function (t, s) { if (f(s)) { e.call(s, function (u) { q(t, u) }) } else { if (o(s)) { h.call(t, s) } } }; "Boolean Number String Function Array Date RegExp Object".split(" ").forEach(function (s) { d["[object " + s + "]"] = s.toLowerCase() }); var b = function (s, v) { if (!(this instanceof b)) { return new b(s, v) } if (!s) { return } var t = []; if (p(s) === "string") { try { t.push(j.parseFromString(s, "text/xml")) } catch (u) { } } else { if (o(s)) { t.push(s) } else { if (f(s)) { t = s } } } if (p(v) === "string") { q(this, k(v, t)) } else { if (s instanceof b) { return s } else { q(this, t) } } }; b.prototype = { veresion: "linkFly.X.1.2", constructor: b, length: 0, find: function (t, s) { return b(s || this, t) }, text: function (s) { if (!arguments.length && s == g) { var t = this[0]; return (t && t.firstChild && t.firstChild.nodeValue) || "" } if (this.length) { e.call(this, function (u) { u.firstChild.nodeValue = s }) } return this }, attr: function (s, t) { if (arguments.length === 2) { t = t == g ? "" : t; if (this.length) { e.call(this, function (v) { v.setAttribute(s, t) }) } return this } var u = this[0]; return u && u.getAttribute && u.getAttribute(s) || "" }, each: function (u) { if (!a(u)) { return } for (var t = 0, s = this.length; t < s; t++) { if (u.call(this[t], this[t], t) === false) { return false } } return this } };[["eq", function (s) { return b(this[s[0]]) }], ["slice", function (s) { return b(m.call(this, s[0] || 0, s[1] || this.length - 1)) }], ["splice", function (t) { var s = [t[0] || 0, t[1] || 0].concat(m.call(t, 2)); return b(r.apply(this, s)) }]].forEach(function (s) { b.prototype[s[0]] = function () { if (!this.length) { return null } return s[1].call(this, arguments) } }); b.isXML = function (s) { return s && s.createElement && s.createElement("P").nodeName !== s.createElement("p").nodeName }; b.find = k; i.X = b })(window);